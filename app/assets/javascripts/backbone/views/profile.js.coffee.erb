class App.Views.Profile extends App.Views.Base
  template: (model) ->
    return Mustache.render(JST["backbone/templates/profile"](), model);
  className: "page-app page-profil"
  newItemHeight: $('.new-item')
  simple_map: undefined
  events:
    'click .logo': 'logo'

  initialize: (model)->
    @model = model
    console.log model

  onShow: (v,r,o) ->
    @unWrap(r)
    $('.page-content').addClass @className
    newItemHeight= $('.new-item').height()
    $('.new-item').height 0
    setTimeout (->
      TweenMax.to $('.new-item'), .5,
        css:
          height: newItemHeight
          autoAlpha: 1
          marginBottom: 30
        ease: Circ.easeInOut
      setTimeout (->
        $('.new-item').css 'height', ''
        return
      ), 600
      return
    ), 4000

    ### Google Map ###


    if $('#profil-map').length
      @simple_map = new GMaps(
        el: '#profil-map'
        lat: 37.775
        lng: -122.41833
        zoomControl: false
        zoomControlOpt:
          style: 'SMALL'
          position: 'TOP_LEFT'
        panControl: false
        streetViewControl: false
        mapTypeControl: false
        overviewMapControl: false)
      @simple_map.addMarker
        lat: 37.776
        lng: -122.41833
        title: 'Marker with InfoWindow'
        icon: '<%= image_path('profil_page/marker.png') %>'

    ### Handle Comments Show / Hide ###

    $('.profil-content').on 'click', '.more-comments', ->
      $(this).closest('.more').find('.share').slideUp 200, ->
        $(this).closest('.more').find('.comments').slideToggle 200
        $(this).closest('.more').find('.more-comments').toggleClass 'active'
        $(this).closest('.more').find('.more-share').removeClass 'active'
        return
      return

    ### Handle Like Comment ###

    $('.profil-content').on 'click', '.like', ->
      $(this).toggleClass 'liked'
      return

    ### Handle Share Show / Hide ###

    $('.profil-content').on 'click', '.more-share', ->
      $(this).closest('.more').find('.comments').slideUp 200, ->
        $(this).closest('.more').find('.share').slideToggle 200
        $(this).closest('.more').find('.more-share').toggleClass 'active'
        $(this).closest('.more').find('.more-comments').removeClass 'active'
        return
      return

    ### Radar Chart ###

    @radarChartData =
      labels: [
        'Eating'
        'Drinking'
        'Sleeping'
        'Designing'
        'Coding'
        'Cycling'
        'Running'
      ]
      datasets: [ {
        label: 'My Second dataset'
        fillColor: 'rgba(151,187,205,0.2)'
        strokeColor: 'rgba(151,187,205,1)'
        pointColor: 'rgba(151,187,205,1)'
        pointStrokeColor: '#fff'
        pointHighlightFill: '#fff'
        pointHighlightStroke: 'rgba(151,187,205,1)'
        data: [
          38
          48
          40
          89
          96
          27
          90
        ]
      } ]
    setTimeout (->
      window.myRadar = new Chart(document.getElementById('profil-chart').getContext('2d')).Radar(
        labels: [
          'Eating'
          'Drinking'
          'Sleeping'
          'Designing'
          'Coding'
          'Cycling'
          'Running'
        ]
        datasets: [ {
          label: 'My Second dataset'
          fillColor: 'rgba(151,187,205,0.2)'
          strokeColor: 'rgba(151,187,205,1)'
          pointColor: 'rgba(151,187,205,1)'
          pointStrokeColor: '#fff'
          pointHighlightFill: '#fff'
          pointHighlightStroke: 'rgba(151,187,205,1)'
          data: [
            38
            48
            40
            89
            96
            27
            90
          ]
        } ],
        responsive: true
        tooltipCornerRadius: 0
        animationSteps: 60)
      return
    ), 1500

    ### Item Map ###

    @miami = new (google.maps.LatLng)(25.7738889, -80.1938889)
    @neighborhoods = [ new (google.maps.LatLng)(25.7768889, -80.1788889) ]
    @markers = []
    @iterator = 0
    @map = undefined

    google.maps.event.addDomListener window, 'load', @map_init
    @drop()

    # ---
    # generated by js2coffee 2.2.0

  map_init: ->
    mapOptions =
      zoom: 12
      center: @miami
      panControl: false
      zoomControl: false
      streetViewControl: false
      mapTypeControl: false
      overviewMapControl: false
      styles: [
        {
          'featureType': 'water'
          'stylers': [
            { 'saturation': 43 }
            { 'lightness': -11 }
            { 'hue': '#0088ff' }
          ]
        }
        {
          'featureType': 'road'
          'elementType': 'geometry.fill'
          'stylers': [
            { 'hue': '#ff0000' }
            { 'saturation': -100 }
            { 'lightness': 99 }
          ]
        }
        {
          'featureType': 'road'
          'elementType': 'geometry.stroke'
          'stylers': [
            { 'color': '#808080' }
            { 'lightness': 54 }
          ]
        }
        {
          'featureType': 'landscape.man_made'
          'elementType': 'geometry.fill'
          'stylers': [ { 'color': '#ece2d9' } ]
        }
        {
          'featureType': 'poi.park'
          'elementType': 'geometry.fill'
          'stylers': [ { 'color': '#ccdca1' } ]
        }
        {
          'featureType': 'road'
          'elementType': 'labels.text.fill'
          'stylers': [ { 'color': '#767676' } ]
        }
        {
          'featureType': 'road'
          'elementType': 'labels.text.stroke'
          'stylers': [ { 'color': '#ffffff' } ]
        }
        {
          'featureType': 'poi'
          'stylers': [ { 'visibility': 'off' } ]
        }
        {
          'featureType': 'landscape.natural'
          'elementType': 'geometry.fill'
          'stylers': [
            { 'visibility': 'on' }
            { 'color': '#b8cb93' }
          ]
        }
        {
          'featureType': 'poi.park'
          'stylers': [ { 'visibility': 'on' } ]
        }
        {
          'featureType': 'poi.sports_complex'
          'stylers': [ { 'visibility': 'on' } ]
        }
        {
          'featureType': 'poi.medical'
          'stylers': [ { 'visibility': 'on' } ]
        }
        {
          'featureType': 'poi.business'
          'stylers': [ { 'visibility': 'simplified' } ]
        }
      ]
    map = new (google.maps.Map)(document.getElementById('item-map'), mapOptions)
    return

  drop: ->
    othis = this
    setTimeout (->
      i = 0
      while i < othis.neighborhoods.length
        setTimeout (->
          othis.addMarker()
          return
        ), i * 350
        i++
      return
    ), 1500
    return

  addMarker: ->
    @markers.push new (google.maps.Marker)(
      position: @neighborhoods[@iterator]
      map: @map
      draggable: false
      animation: google.maps.Animation.DROP)
    @iterator++
    return